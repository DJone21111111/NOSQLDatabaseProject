@model List<IncidentManagementsSystemNOSQL.Models.Ticket>
@using System
@using IncidentManagementsSystemNOSQL.Models
@using static IncidentManagementsSystemNOSQL.Models.Enums

@{
    ViewData["Title"] = "Service Desk Dashboard";

    var statusCounts = ViewBag.StatusCounts as IDictionary<TicketStatus, int> ?? new Dictionary<TicketStatus, int>();
    var statusPercentages = ViewBag.StatusPercentages as IDictionary<TicketStatus, double> ?? new Dictionary<TicketStatus, double>();

    int CountFor(TicketStatus key) => statusCounts.TryGetValue(key, out var value) ? value : 0;
    double PercentFor(TicketStatus key) => statusPercentages.TryGetValue(key, out var value) ? value : 0;

    var totalTickets = ViewBag.TotalTickets is int total ? total : 0;
    var closedResolvedCount = CountFor(TicketStatus.closed_resolved);
    var closedNoResolveCount = CountFor(TicketStatus.closed_no_resolve);
    var closedTotalCount = closedResolvedCount + closedNoResolveCount;
    double closedPercent = totalTickets > 0 ? Math.Round((double)closedTotalCount / totalTickets * 100, 1) : 0;

    var agentName = ViewBag.AgentName as string ?? string.Empty;
    var agentId = ViewBag.AgentId as string ?? string.Empty;
    var agentEmail = ViewBag.AgentEmail as string ?? string.Empty;
    var hasAgentContext = ViewBag.HasAgentContext is bool flag && flag;
    var agentTicketCount = ViewBag.AgentTicketCount is int myCount ? myCount : 0;

    var assignedBlurb = hasAgentContext && !string.IsNullOrWhiteSpace(agentName)
      ? $"Service desk queue for {agentName}."
      : "Monitor and manage all incident tickets in real-time";
}

@Html.AntiForgeryToken()

<style>


    /* styles unchanged */
</style>

<div class="container-fluid px-4 py-3">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>‚úÖ Success!</strong> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>‚ùå Error!</strong> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="dashboard-header">
        <div class="d-flex flex-column flex-lg-row justify-content-between align-items-lg-center gap-3">
            <div>
                <h1 class="mb-2">üé´ Service Desk Dashboard</h1>
                <p class="mb-0 opacity-75">@assignedBlurb</p>
            </div>
            @if (hasAgentContext)
            {
                <div class="profile-chip">
                    <span>üë§ @agentName</span>
                    <span>üÜî @agentId</span>
                    @if (!string.IsNullOrWhiteSpace(agentEmail))
                    {
                        <span>‚úâÔ∏è @agentEmail</span>
                    }
                </div>
            }
        </div>
    </div>

    <div class="row g-4 mb-4">
        <div class="col-xl-3 col-md-6">
            <a href="@Url.Action("Index", "Ticket")" class="text-decoration-none">
                <div class="stat-card status-total">
                    <div class="card-body text-white">
                        <div class="stat-icon">üìä</div>
                        <div class="stat-label">Total Tickets</div>
                        <h2 class="stat-number">@ViewBag.TotalTickets</h2>
                        @if (hasAgentContext)
                        {
                            <small class="d-block text-white-50">Assigned to you: @agentTicketCount</small>
                        }
                    </div>
                </div>
            </a>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="stat-card status-open">
                <div class="card-body text-white">
                    <div class="stat-icon">üü¢</div>
                    <div class="stat-label">Open Tickets</div>
                    <h2 class="stat-number">@CountFor(TicketStatus.open)</h2>
                    <p class="mb-0">@PercentFor(TicketStatus.open).ToString("0.0")%</p>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="stat-card status-progress">
                <div class="card-body text-white">
                    <div class="stat-icon">‚öôÔ∏è</div>
                    <div class="stat-label">In Progress</div>
                    <h2 class="stat-number">@CountFor(TicketStatus.in_progress)</h2>
                    <p class="mb-0">@PercentFor(TicketStatus.in_progress).ToString("0.0")%</p>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="stat-card status-closed">
                <div class="card-body text-white">
                    <div class="stat-icon">‚úÖ</div>
                    <div class="stat-label">Closed</div>
                    <h2 class="stat-number">@closedTotalCount</h2>
                    <p class="mb-0">@closedPercent.ToString("0.0")%</p>
                    <small class="d-block text-white-50">
                        Resolved: @closedResolvedCount (@PercentFor(TicketStatus.closed_resolved).ToString("0.0")%) ‚Ä¢
                        Unresolved: @closedNoResolveCount (@PercentFor(TicketStatus.closed_no_resolve).ToString("0.0")%)
                    </small>
                </div>
            </div>
        </div>
    </div>

    <div class="search-filter-section">
        <div class="row align-items-center g-3">
            <div class="col-lg-4 col-md-6">
                <div class="input-group">
                    <span class="input-group-text bg-white">üîç</span>
                    <input type="text" id="searchInput" class="form-control" placeholder="Search tickets by ID, title, or employee...">
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <select id="statusFilter" class="form-select">
                    <option value="">All Statuses</option>
                    <option value="@TicketStatus.open">Open</option>
                    <option value="@TicketStatus.in_progress">In Progress</option>
                    <option value="@TicketStatus.closed_resolved">Closed - Resolved</option>
                    <option value="@TicketStatus.closed_no_resolve">Closed - No Resolve</option>
                </select>
            </div>
            <div class="col-lg-3 col-md-6">
                <select id="departmentFilter" class="form-select">
                    <option value="">All Departments</option>
                    @{
                        // Correctly cast ViewBag.DepartmentCounts
                        var departmentCounts = ViewBag.DepartmentCounts as IDictionary<DepartmentType, int>;
                    }
                    @if (departmentCounts != null)
                    {
                        // Iterate directly over the keys
                        foreach (var dept in departmentCounts.Keys)
                        {
                            <option value="@dept">@dept.ToString().Replace("_", " ")</option>
                        }
                    }
                </select>
            </div>
            @if (hasAgentContext)
            {
                <div class="col-lg-2 col-md-6 d-flex align-items-center">
                    <div class="form-check form-switch assignment-switch mb-0">
                        <input class="form-check-input" type="checkbox" id="assignedSwitch">
                        <label class="form-check-label" for="assignedSwitch">My tickets (@agentTicketCount)</label>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="tickets-card card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">üìã All Tickets</h4>
                    <span class="badge bg-primary" id="ticketCount">@ViewBag.TotalTickets Tickets</span>
                </div>
                <div class="card-body p-0">
                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0" id="ticketsTable">
                                <thead>
                                    <tr>
                                        <th style="width: 120px;">Ticket ID</th>
                                        <th>Title</th>
                                        <th style="width: 140px;">Status</th>
                                        <th>Employee</th>
                                        <th style="width: 150px;">Department</th>
                                        <th style="width: 160px;">Created</th>
                                        <th style="width: 150px;">Assigned To</th>
                                        <th style="width: 120px;" class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ticket in Model)
                                    {
                                        var statusString = ticket.Status.ToString();
                                        <tr data-ticket-id="@ticket.TicketId"
                                                                  data-status="@statusString"
                                                                  data-department="@((ticket.Employee?.Department?.Name ?? "Unknown Department"))"
                                                                  data-assigned-state="@(ticket.AssignedTo == null ? "unassigned" : (hasAgentContext && !string.IsNullOrWhiteSpace(agentId) && string.Equals(ticket.AssignedTo.EmployeeId, agentId, StringComparison.OrdinalIgnoreCase) ? "mine" : "other"))">
                                            <td>
                                                <strong class="text-primary">@ticket.TicketId</strong>
                                            </td>
                                            <td>
                                                <div class="d-flex flex-column">
                                                    <span class="fw-bold">@ticket.Title</span>
                                                    @if (!string.IsNullOrEmpty(ticket.Description) && ticket.Description.Length > 50)
                                                    {
                                                        <small class="text-muted">@ticket.Description.Substring(0, 50)...</small>
                                                    }
                                                    else if (!string.IsNullOrEmpty(ticket.Description))
                                                    {
                                                        <small class="text-muted">@ticket.Description</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                @if (ticket.Status == TicketStatus.open)
                                                {
                                                    <span class="badge-status status-open-pill">
                                                        <span class="status-dot"></span>
                                                        Open
                                                    </span>
                                                }
                                                else if (ticket.Status == TicketStatus.in_progress)
                                                {
                                                    <span class="badge-status status-progress-pill">
                                                        <span class="status-dot"></span>
                                                        In Progress
                                                    </span>
                                                }
                                                else if (ticket.Status == TicketStatus.closed_resolved)
                                                {
                                                    <span class="badge-status status-closed-resolved-pill">
                                                        <span class="status-dot"></span>
                                                        Closed ¬∑ Resolved
                                                    </span>
                                                }
                                                else if (ticket.Status == TicketStatus.closed_no_resolve)
                                                {
                                                    <span class="badge-status status-closed-no-pill">
                                                        <span class="status-dot"></span>
                                                        Closed ¬∑ Unresolved
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge-status status-closed-pill">
                                                        <span class="status-dot"></span>
                                                        @ticket.Status
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <div class="d-flex flex-column">
                                                    <span>@(ticket.Employee?.Name ?? "Unknown Employee")</span>
                                                    <small class="text-muted">@((ticket.Employee?.Email ?? "No email on file"))</small>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge-chip">@((ticket.Employee?.Department?.Name ?? "Unknown Department"))</span>
                                            </td>
                                            <td>
                                                <small>@ticket.DateCreated.ToLocalTime().ToString("MMM dd, yyyy")</small><br />
                                                <small class="text-muted">@ticket.DateCreated.ToLocalTime().ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                @if (ticket.AssignedTo != null)
                                                {
                                                    var isMine = hasAgentContext && !string.IsNullOrWhiteSpace(agentId) && string.Equals(ticket.AssignedTo.EmployeeId, agentId, StringComparison.OrdinalIgnoreCase);
                                                    <span class="badge-chip @(isMine ? "badge-chip-self" : string.Empty)">
                                                        üë§ @ticket.AssignedTo.Name
                                                        @if (isMine)
                                                        {
                                                            <span class="self-tag">(You)</span>
                                                        }
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge-chip badge-chip-muted">‚ö†Ô∏è Unassigned</span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Edit", "Ticket", new { id = ticket.Id })"
                                                                                   class="btn btn-sm btn-action btn-edit"
                                                                                   title="Edit Ticket">
                                                        ‚úèÔ∏è Edit
                                                    </a>
                                                    @if (ticket.Status != TicketStatus.closed_resolved && ticket.Status != TicketStatus.closed_no_resolve)
                                                    {
                                                        <button type="button"
                                                                                                class="btn btn-sm btn-action btn-close-ticket close-ticket-btn"
                                                                                                data-ticket-id="@ticket.Id"
                                                                                                data-ticket-number="@ticket.TicketId"
                                                                                                data-reason="resolved"
                                                                                                title="Close as Resolved">
                                                            ‚úÖ
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="p-5 text-center">
                            <div class="mb-3" style="font-size: 4rem;">üì≠</div>
                            <h5 class="text-muted">No tickets in the system right now</h5>
                            @if (hasAgentContext && !string.IsNullOrWhiteSpace(agentName))
                            {
                                <p class="text-muted">New incidents, including those assigned to @agentName, will appear here automatically.</p>
                            }
                            else
                            {
                                <p class="text-muted">Tickets will appear here as soon as incidents are logged.</p>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const searchInput = document.getElementById('searchInput');
        const statusFilter = document.getElementById('statusFilter');
        const departmentFilter = document.getElementById('departmentFilter');
        const assignedSwitch = document.getElementById('assignedSwitch');

        if (searchInput) searchInput.addEventListener('keyup', filterTable);
        if (statusFilter) statusFilter.addEventListener('change', filterTable);
        if (departmentFilter) departmentFilter.addEventListener('change', filterTable);
        if (assignedSwitch) assignedSwitch.addEventListener('change', filterTable);

        function filterTable() {
            const table = document.getElementById('ticketsTable');
            if (!table) return;

            const searchValue = searchInput ? searchInput.value.toLowerCase() : '';
            const statusValue = statusFilter ? statusFilter.value.toLowerCase() : '';
            const departmentValue = departmentFilter ? departmentFilter.value.toLowerCase() : '';
            const showMineOnly = assignedSwitch ? assignedSwitch.checked : false;

            const rows = table.getElementsByTagName('tr');
            let visibleCount = 0;

            for (let i = 1; i < rows.length; i++) {
                const row = rows[i];
                const status = (row.getAttribute('data-status') || '').toLowerCase();
                const department = (row.getAttribute('data-department') || '').toLowerCase();
                const assignedState = (row.getAttribute('data-assigned-state') || '').toLowerCase();
                const text = row.textContent.toLowerCase();

                const matchesSearch = text.includes(searchValue);
                const matchesStatus = statusValue === '' || status === statusValue;
                const matchesDepartment = departmentValue === '' || department === departmentValue;
                const matchesAssigned = !showMineOnly || assignedState === 'mine';

                if (matchesSearch && matchesStatus && matchesDepartment && matchesAssigned) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            }

            const ticketCountBadge = document.getElementById('ticketCount');
            if (ticketCountBadge) {
                ticketCountBadge.textContent = visibleCount + ' Tickets';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.close-ticket-btn').forEach(function (button) {
                button.addEventListener('click', function (e) {
                    e.preventDefault();

                    const ticketId = this.getAttribute('data-ticket-id');
                    const ticketNumber = this.getAttribute('data-ticket-number');
                    const reason = this.getAttribute('data-reason');
                    const reasonText = reason === 'resolved' ? 'Resolved' : 'No Resolve';

                    if (confirm('Are you sure you want to close ticket ' + ticketNumber + ' as ' + reasonText + '?')) {
                        const form = document.createElement('form');
                        form.method = 'POST';
                        form.action = '@Url.Action("CloseTicket", "Ticket")';

                        const idInput = document.createElement('input');
                        idInput.type = 'hidden';
                        idInput.name = 'id';
                        idInput.value = ticketId;
                        form.appendChild(idInput);

                        const reasonInput = document.createElement('input');
                        reasonInput.type = 'hidden';
                        reasonInput.name = 'reason';
                        reasonInput.value = reason;
                        form.appendChild(reasonInput);

                        const token = document.querySelector('input[name="__RequestVerificationToken"]');
                        if (token) {
                            const tokenInput = document.createElement('input');
                            tokenInput.type = 'hidden';
                            tokenInput.name = '__RequestVerificationToken';
                            tokenInput.value = token.value;
                            form.appendChild(tokenInput);
                        }

                        document.body.appendChild(form);
                        form.submit();
                    }
                });
            });
        });
    </script>
}