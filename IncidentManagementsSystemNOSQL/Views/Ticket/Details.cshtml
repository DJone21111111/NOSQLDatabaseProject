@model IncidentManagementsSystemNOSQL.Models.Ticket
@using System.Linq
@using static IncidentManagementsSystemNOSQL.Models.Enums

@{
    ViewData["Title"] = "Ticket Details";
    var status = Model.Status;
    string StatusBadgeHtml()
    {
        if (status == TicketStatus.open)
            return "<span class=\"badge bg-success\" style=\"font-size: 1rem; padding: 0.5rem 1rem;\">üü¢ Open</span>";
        if (status == TicketStatus.in_progress)
            return "<span class=\"badge bg-warning text-dark\" style=\"font-size: 1rem; padding: 0.5rem 1rem;\">‚öôÔ∏è In Progress</span>";
        if (status == TicketStatus.closed_resolved)
            return "<span class=\"badge bg-secondary\" style=\"font-size: 1rem; padding: 0.5rem 1rem;\">‚úÖ Closed - Resolved</span>";
        if (status == TicketStatus.closed_no_resolve)
            return "<span class=\"badge bg-dark\" style=\"font-size: 1rem; padding: 0.5rem 1rem;\">‚ùå Closed - No Resolve</span>";
        return $"<span class=\"badge bg-info\" style=\"font-size: 1rem; padding: 0.5rem 1rem;\">{status}</span>";
    }
}

<style>
    .details-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .info-card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.07);
        margin-bottom: 1.5rem;
    }

    .info-section {
        padding: 1.5rem;
        border-bottom: 1px solid #e9ecef;
    }

        .info-section:last-child {
            border-bottom: none;
        }

    .info-label {
        font-weight: 600;
        color: #6c757d;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.5rem;
    }

    .info-value {
        font-size: 1rem;
        color: #212529;
    }

    .comment-card {
        background: #f8f9fa;
        border-left: 4px solid #667eea;
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 8px;
    }
</style>

<div class="container-fluid px-4 py-3">
    <div class="details-header">
        <div class="d-flex justify-content-between align-items-start">
            <div>
                <h1 class="mb-2">üé´ @Model.Title</h1>
                <p class="mb-0 opacity-75">Ticket ID: <strong>@Model.TicketId</strong></p>
            </div>
            <div>
                @Html.Raw(StatusBadgeHtml())
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card info-card">
                <div class="info-section">
                    <div class="info-label">üìù Description</div>
                    <div class="info-value">
                        @if (!string.IsNullOrWhiteSpace(Model.Description))
                        {
                            <p class="mb-0">@Model.Description</p>
                        }
                        else
                        {
                            <p class="text-muted mb-0"><em>No description provided</em></p>
                        }
                    </div>
                </div>
            </div>

            <div class="card info-card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">üë§ Reporter Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="info-label">Employee Name</div>
                            <div class="info-value">@((Model.Employee?.Name) ?? "Unknown")</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="info-label">Employee ID</div>
                            <div class="info-value">@((Model.Employee?.EmployeeId) ?? "-")</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="info-label">Email</div>
                            <div class="info-value">@((Model.Employee?.Email) ?? "-")</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="info-label">Department</div>
                            <div class="info-value">
                                <span class="badge bg-light text-dark">@((Model.Employee?.Department?.Name) ?? "Unknown")</span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="info-label">Department Description</div>
                            <div class="info-value">@((Model.Employee?.Department?.Description) ?? "-")</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card info-card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">üí¨ Comments (@(Model.Comments?.Count ?? 0))</h5>
                </div>
                <div class="card-body">
                    @if (Model.Comments?.Any() == true)
                    {
                        @foreach (var comment in Model.Comments.OrderBy(c => c.CreatedAt))
                        {
                            <div class="comment-card">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <div>
                                        <strong>@(comment.Author?.Name ?? "Unknown")</strong>
                                        @if (!string.IsNullOrWhiteSpace(comment.Author?.EmployeeId))
                                        {
                                            <span class="badge bg-secondary ms-2">@comment.Author.EmployeeId</span>
                                        }
                                    </div>
                                    <small class="text-muted">
                                        @comment.CreatedAt.ToLocalTime().ToString("MMM dd, yyyy HH:mm")
                                    </small>
                                </div>
                                <p class="mb-0">@comment.Text</p>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted mb-0"><em>No comments on this ticket yet</em></p>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card info-card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">üìÖ Timeline</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <div class="info-label">Created</div>
                        <div class="info-value">
                            @Model.DateCreated.ToLocalTime().ToString("MMM dd, yyyy")
                            <br />
                            <small class="text-muted">@Model.DateCreated.ToLocalTime().ToString("HH:mm:ss")</small>
                        </div>
                    </div>

                    @if (Model.DateClosed.HasValue)
                    {
                        <div class="mb-3">
                            <div class="info-label">Closed</div>
                            <div class="info-value">
                                @Model.DateClosed.Value.ToLocalTime().ToString("MMM dd, yyyy")
                                <br />
                                <small class="text-muted">@Model.DateClosed.Value.ToLocalTime().ToString("HH:mm:ss")</small>
                            </div>
                        </div>

                        <div class="mb-0">
                            <div class="info-label">Duration</div>
                            <div class="info-value">
                                @{
                                    var duration = Model.DateClosed.Value - Model.DateCreated;
                                    if (duration.TotalDays >= 1)
                                    {
                                        <span>@duration.Days days, @duration.Hours hours</span>
                                    }
                                    else if (duration.TotalHours >= 1)
                                    {
                                        <span>@duration.Hours hours, @duration.Minutes minutes</span>
                                    }
                                    else
                                    {
                                        <span>@duration.Minutes minutes</span>
                                    }
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="mb-0">
                            <div class="info-label">Status</div>
                            <div class="info-value">
                                <span class="badge bg-info text-white">Still Open</span>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="card info-card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">üë• Assignment</h5>
                </div>
                <div class="card-body">
                    @if (Model.AssignedTo != null)
                    {
                        <div class="info-label">Assigned To</div>
                        <div class="info-value">
                            <strong>@Model.AssignedTo.Name</strong>
                            <br />
                            <small class="text-muted">@Model.AssignedTo.EmployeeId</small>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning mb-0">
                            <small>‚ö†Ô∏è This ticket is not assigned yet</small>
                        </div>
                    }
                </div>
            </div>

            <div class="card info-card">
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                            ‚úèÔ∏è Edit Ticket
                        </a>
                        <a asp-action="Index" asp-controller="Dashboard" class="btn btn-outline-secondary">
                            ‚Üê Back to Dashboard
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
